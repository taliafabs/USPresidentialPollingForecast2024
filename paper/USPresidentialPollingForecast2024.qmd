---
title: "My title"
subtitle: "Forecasting the 2024 U.S. Presidential Election using Poll of Polls Methodology"
author: 
  - Talia Fabregas
  - Fatimah Yunusa
  - Aliza Mithwani
thanks: "The code and data used to perform this presidential election forecast can be found at: [https://github.com/taliafabs/USPresidentialPollingForecast2024.git](https://github.com/taliafabs/USPresidentialPollingForecast2024.git)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
```


# Introduction

Overview paragraph
The U.S. Presidential Election will take place on Tuesday November 5th. Vice President Kamala Harris and Former President Donald Trump ... President Joe Biden made the unprecedented decision to end his re-election campaign on July 21, 2024 and immediately endorsed Vice President Kamala Harris. She became the presumptive Democratic presidential nominee the same day and secured enough delegates to win the nomination on July 28.

This study only considers polling data from after President Joe Biden ended his re-election campaign and Vice President Kamala Harris became the presumptive Democratic nominee for President. Polls conducted before July 21, 2024 were not considered because they include President Joe Biden, who is no longer running for President, as the Democratic nominee. 

Estimand paragraph

Results paragraph

Why it matters paragraph

Telegraphing paragraph: The remainder of this paper is structured as follows. @sec-data....


# Data {#sec-data}

## Overview
<!-- We use the statistical programming language R [@citeR].... Our data [@shelter].... Following @tellingstories, we consider... -->
This presidential election forecast was performed using the statistical programming language R [@citeR] and Presidential general election polling data from FiveThirtyEight [@fivethirtyeight]. Data cutoff October 26, 2024. No resources or articles from after this date were used or considered in any way. 

## Measurement
	
Some paragraphs about how we go from a phenomena in the world to an entry in the dataset.

## Outcome variables

Add graphs, tables and text. Use sub-sub-headings for each outcome variable or update the subheading to be singular.



Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| echo: false
#| include: false
#| message: false
setwd("/Users/talia/USPresidentialPollingForecast2024")
analysis_data <- arrow::read_parquet("data/02-analysis_data/analysis_data.parquet")
# print(analysis_data)
```

```{r}
#| label: fig-nationalavg
#| fig-cap: National Polling Averages since May 2024
#| echo: false
#| warning: false
#| message: false

national <- analysis_data |>
  filter(state=="National")

ggplot(national, aes(x = end_date, y = pct, color = party)) +
  stat_summary(geom = "line", fun = mean) +      # Plot the mean line for polling percentages
  geom_point(size = 1, alpha = 0.15) +            # Add points for each individual poll
  scale_color_manual(values = c("DEM" = "blue", "REP" = "red")) +
  geom_vline(xintercept = as.Date("2024-07-21"), linetype = "dashed", color = "darkgray") +
  labs(title = "National Polling Average by Party (DEM vs REP)",
       x = "Date",
       y = "Polling Percentage",
       color = "Party") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(limits = c(25, NA))
```

Since President Biden ended his re-election campaign and Vice President Harris became the Democratic Presidential nominee, the polls have shown a dead heat between Vice President Harris and former President Trump.

```{r}
#| label: fig-sevenbattlegrounds
#| fig-cap: seven battleground states
#| echo: false
#| warning: false
#| message: false
sevenbattlegrounds <- analysis_data |>
  filter(state=="Wisconsin" | state == "Michigan" | state == "Pennsylvania" |
           state == "Nevada" | state == "Arizona" | state == "Georgia" | 
           state == "North Carolina")

ggplot(sevenbattlegrounds, aes(x = end_date, y = pct, color = party)) +
  stat_summary(geom = "line", fun = mean) +      # Plot the mean line for polling percentages
  geom_point(size = 1, alpha = 0.15) +            # Add points for each individual poll
  scale_color_manual(values = c("DEM" = "blue", "REP" = "red")) +
  geom_vline(xintercept = as.Date("2024-07-21"), linetype = "dashed", color = "darkgray") +
  labs(title = "swing states",
       x = "Date",
       y = "Average Polling %",
       color = "Party") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(limits = c(35, NA)) +
  facet_wrap(~state)
```
```{r}
#| label: fig-nationalavg2
#| fig-cap: National Polling Averages since May 2024
#| echo: false
#| warning: false
#| message: false

national2 <- analysis_data |>
  filter(state=="National",
         (candidate_name == "Kamala Harris" | candidate_name == "Donald Trump"),
         end_date >= as.Date("2024-07-21")
         )

ggplot(national2, aes(x = end_date, y = pct, color = candidate_name)) +
  stat_summary(geom = "line", fun = mean) +      # Plot the mean line for polling percentages
  geom_point(size = 1, alpha = 0.15) +            # Add points for each individual poll
  scale_color_manual(values = c("Kamala Harris" = "blue", "Donald Trump" = "red")) +
  # geom_vline(xintercept = as.Date("2024-07-21"), linetype = "dashed", color = "darkgray") +
  labs(title = "National Polling Average Harris v Trump",
       x = "Date",
       y = "Average Polling %",
       color = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(limits = c(25, NA))
```

```{r}
#| label: fig-sevenbattlegroundskamala
#| fig-cap: seven battleground states with harris
#| echo: false
#| warning: false
#| message: false
#| 
sevenbattlegrounds2 <- analysis_data |>
  filter((state=="Wisconsin" | state == "Michigan" | state == "Pennsylvania" |
           state == "Nevada" | state == "Arizona" | state == "Georgia" | 
           state == "North Carolina"), 
         (candidate_name == "Kamala Harris" | candidate_name == "Donald Trump"),
         end_date >= as.Date("2024-07-21"))

ggplot(sevenbattlegrounds2, aes(x = end_date, y = pct, color = candidate_name)) +
  stat_summary(geom = "line", fun = mean) +      # Plot the mean line for polling percentages
  geom_point(size = 1, alpha = 0.15) +            # Add points for each individual poll
  scale_color_manual(values = c("Kamala Harris" = "blue", "Donald Trump" = "red")) +
  labs(title = "swing states",
       x = "Date",
       y = "Average Polling %",
       color = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(limits = c(35, NA)) +
  # scale_x_continuous(limits=c(NA, as.Date("2024-10-29"))) +
  facet_wrap(~state)
```
Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false

# analysis_data <- read_csv(here::here("data/02-analysis_data/analysis_data.csv"))
# 
# analysis_data |> 
#   ggplot(aes(x = width, y = length)) +
#   geom_point(alpha = 0.8) +
#   theme_minimal() +
#   labs(x = "Wing width (mm)",
#        y = "Wing length (mm)")
```

Talk way more about it. 

## Predictor variables

Add graphs, tables and text.

Use sub-sub-headings for each outcome variable and feel free to combine a few into one if they go together naturally.








# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

# library(rstanarm)
# 
# first_model <-
#   readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

# modelsummary::modelsummary(
#   list(
#     "First model" = first_model
#   ),
#   statistic = "mad",
#   fmt = 2
# )
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

# pp_check(first_model) +
#   theme_classic() +
#   theme(legend.position = "bottom")
# 
# posterior_vs_prior(first_model) +
#   theme_minimal() +
#   scale_color_brewer(palette = "Set1") +
#   theme(legend.position = "bottom") +
#   coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

# plot(first_model, "trace")
# 
# plot(first_model, "rhat")
```



\newpage


# References